# Use vi bindings
setw -g mode-keys vi
set-option -g status-keys vi


## Use C-s (control and s key at the same time) as the prefix key
unbind C-b
set -g prefix C-w

# Easy config reload
bind-key C-R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key C-r refresh-client
bind-key C-L clear-history

bind-key C-space next-window
bind-key C-bspace previous-window
bind-key C-enter next-layout

# use vim-like keys for splits and windows
bind-key C-v split-window -h
bind-key C-s split-window -v
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
 bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key C-+ select-layout main-horizontal
bind-key C-- select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta


# Allow nested tmux sessions by making "C-b b" possible for sending a control
# sequence to a nested session
bind-key b send-prefix

# XXX Not supported with version in CentOS 7
set-window-option -g mouse off

# Add true color support
# $TERM, fix colors / use true colors
# set -g default-terminal "tmux-256color"
set -g default-terminal "screen-256color"
# XXX this seems to be the setting breaking neomutt
# (artefacts in index after opening the pager)
# set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# reload
bind-key R respawn-window

# Start Window Numbering at 1
set -g base-index 1

## Copy mode
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
#
# Copying between tmux frames

# ctrl-b [ - enter copy mode
# move cursor to the start or end of the desired text string
# V - to activate fulle line highlighting (to be clarified how to do )
# move cursor to cover the requisite string
# y - to copy system clipboard
# ctrl-b ] - to paste system clipboard

# URL view
bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

# Shortcut for resizing panes
bind up resize-pane -U 5
bind down resize-pane -D 5
bind left resize-pane -L 5
bind right resize-pane -R 5

# pane movement
bind-key @ command-prompt -p "create pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# window movement / renumbering like in screen's :number
bind-key m command-prompt -p "move window to:"  "swap-window -t '%%'"
bind-key . command-prompt "move-window -r -t '%%'"

# Use zsh (login shell by default)
# https://superuser.com/questions/968942/why-does-tmux-create-new-windows-as-login-shells-by-default
# http://openbsd-archive.7691.n7.nabble.com/tmux-and-login-shells-td170948.html
# Use ZSH from homebrew on MacOS X
# if-shell "uname | grep -q Darwin" "set -g default-shell '/usr/local/bin/zsh'" "set -g default-shell '/bin/zsh'"

# Disable automatic changes of titles
set -g set-titles on
# set -g set-titles-string "#T"
set-window-option -g automatic-rename on
set-window-option -g allow-rename on
set -g renumber-windows on

set-option -g status-position "bottom"

# Tmux resurect
# prefix + Ctrl-s - save
# prefix + Ctrl-r - restore

# Restore more programms
set -g @resurrect-processes 'neomutt'
# set -g @resurrect-processes 'ssh mutt psql mysql sqlite3'
# set -g @resurrect-processes '"sudo journalctl -fxn"'

# Resurrect vim session (see https://github.com/tpope/vim-obsession)
#set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Resurrect pane content
set -g @resurrect-capture-pane-contents 'on'

# Custome tmux session
# new -s work -n work neomutt
# new -s work -n mail 'neomutt'
# new-window -n dashboard 'dashboard'
# new-window -n local
# select-window -t mail

# Tmux continuum
set -g @continuum-restore 'on'

# Managing plugins using TPM
# prefix+I to install
# prefix+U to update

# Logging
# Screenshot: prefix + alt + p
# Save complete history: prefix + alt + shift + p
# Unable to get some special char working
#set -g @almost-sensible 'off'
#    arcticicestudio/nord-tmux             \

set -g @tpm_plugins '                     \
    dracula/tmux                          \
    tmux-plugins/tmux-sensible            \
    tmux-plugins/tmux-resurrect           \
    tmux-plugins/tmux-continuum           \
    tmux-plugins/tmux-yank                \
    tmux-plugins/tmux-pain-control        \
    tmux-plugins/tmux-copycat             \
    tmux-plugins/tmux-open                \
    tmux-plugins/tmux-prefix-highlight    \
    tmux-plugins/tmux-sessionist          \
    tmux-plugins/tmux-logging             \
    tmux-plugins/tpm                      \
'

# Dracula theme options
# https://draculatheme.com/tmux
set -g @dracula-show-battery false
set -g @dracula-show-network false
set -g @dracula-show-weather false
set -g @dracula-show-fahrenheit false
set -g @dracula-cpu-usage false
set -g @dracula-ram-usage false
set -g @dracula-gpu-usage false

set -g @dracula-show-powerline true
set -g @dracula-show-left-sep î‚°
set -g @dracula-show-right-sep î‚²
set -g @dracula-military-time true
set -g @dracula-show-left-icon ðŸ’€
set -g @dracula-border-contrast true

# Bootstrap tpm if needed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'

# Source local configuration if any
if '[ -f ~/.tmux.local.conf ]' 'run ~/.tmux.local.conf'
